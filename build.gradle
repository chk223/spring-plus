plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'io.freefair.lombok' version '8.4'  // Lombok 플러그인 추가
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.lombok' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '2.0.0'
    id 'org.jetbrains.kotlin.kapt' version '2.0.0'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// Lombok 설정 추가
lombok {
    version = "1.18.30"  // 최신 버전 사용
}

dependencies {
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-kotlin:5.0.0'
    kapt 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "com.querydsl:querydsl-kotlin:5.0.0"  // querydsl for kotlin

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    kapt 'org.projectlombok:lombok'  // 이 라인 추가 필요
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // 테스트에도 Lombok 추가
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
}

allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

tasks.named('test') {
    useJUnitPlatform()
}

// Kotlin 컴파일 설정
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

// 소스 디렉토리 설정
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated/querydsl']
        }
        kotlin {
            srcDirs = ['src/main/kotlin', 'src/main/java']  // java 디렉토리도 kotlin 소스로 인식
        }
    }
}
// kapt 생성 파일 위치 설정
kotlin {
    sourceSets.main {
        kotlin.srcDir("$buildDir/generated/source/kapt/main")
    }
}

// 생성된 QClass 파일 위치 설정
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file("$buildDir/generated/source/kapt/main")
}

clean {
    delete file("$buildDir/generated")
}